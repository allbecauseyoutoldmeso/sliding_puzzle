{"version":3,"sources":["kitten.jpeg","Tile.js","Cell.js","CellGenerator.js","TileMover.js","TileScramber.js","Grid.js","App.js","index.js"],"names":["Tile","x","y","size","style","offsetPercentage","backgroundImage","Background","backgroundPosition","backgroundSize","className","Cell","data","handleClick","width","height","onClick","tile","CellGenerator","this","cells","generateCells","coordinates","map","coordinate","position","Array","_e","flat","TileMover","clickedCell","emptyNeighbour","neighbours","find","cell","filter","a","b","includes","TileScrambler","length","forEach","moveTile","emptyCell","targetCell","Math","floor","random","Grid","useState","setCells","tileMover","i","tileScrambler","TileScramber","scrambleTiles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ec70a6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kitten.2882cbdb.jpeg\";","import { React } from 'react'\nimport Background from './kitten.jpeg'\n\nconst Tile = ({ x, y, size }) => {\n  const style = () => {\n    const offsetPercentage = 100 / (size - 1)\n\n    return {\n      backgroundImage: `url(${Background})`,\n      backgroundPosition: `${y * offsetPercentage}% ${100 - (x * offsetPercentage)}%`,\n      backgroundSize: `${size * 50}px ${size * 50}px`\n    }\n  }\n\n  return(\n    <div style={style()} className='tile'>\n    </div>\n  )\n}\n\nexport default Tile\n","import { React } from 'react'\nimport Tile from './Tile'\n\nconst Cell = ({ data, handleClick, size }) => {\n  const style = () => (\n    {\n      width: '50px',\n      height: '50px'\n    }\n  )\n\n  return(\n    <div style={style()} className='cell' onClick={() => handleClick(data)}>\n      {!!data.tile && <Tile {...data.tile} size={size} />}\n    </div>\n  )\n}\n\nexport default Cell\n","class CellGenerator {\n  constructor(size) {\n    this.size = size\n    this.cells = this.generateCells()\n  }\n\n  generateCells() {\n    return this.coordinates().map((coordinate) => ({\n      position: coordinate,\n      tile: ((coordinate.y !== 0 || coordinate.x !== 0) ? coordinate : null)\n    }))\n  }\n\n  coordinates() {\n    return [...Array(this.size)].map((_e, x) => {\n      return [...Array(this.size)].map((_e, y) => ({ x: x, y: y }))\n    }).flat()\n  }\n}\n\nexport default CellGenerator\n","class TileMover {\n  constructor(cells, clickedCell) {\n    this.cells = cells\n    this.clickedCell = clickedCell\n  }\n\n  moveTile() {\n    const emptyNeighbour = this.emptyNeighbour()\n\n    if (!!emptyNeighbour) {\n      emptyNeighbour.tile = this.clickedCell.tile\n      this.clickedCell.tile = null\n    }\n  }\n\n  emptyNeighbour() {\n    return this.neighbours().find((cell) => !cell.tile)\n  }\n\n  neighbours() {\n    return this.cells.filter((cell) => {\n      const a = this.clickedCell.position\n      const b = cell.position\n\n      return (a.x === b.x && [b.y + 1, b.y - 1].includes(a.y)) ||\n        (a.y === b.y && [b.x + 1, b.x - 1].includes(a.x))\n    })\n  }\n}\n\nexport default TileMover\n","class TileScrambler {\n  constructor(cells) {\n    this.cells = cells\n  }\n\n  scrambleTiles() {\n    [...Array(this.cells.length * 10)].forEach(() => {\n      this.moveTile()\n    })\n  }\n\n  moveTile() {\n    const emptyCell = this.emptyCell()\n    const targetCell = this.targetCell(emptyCell)\n    emptyCell.tile = targetCell.tile\n    targetCell.tile = null\n  }\n\n  emptyCell() {\n    return this.cells.find((cell) => !cell.tile)\n  }\n\n  targetCell(emptyCell) {\n    const neighbours = this.neighbours(emptyCell)\n    return neighbours[Math.floor(Math.random() * neighbours.length)]\n  }\n\n  neighbours(emptyCell) {\n    return this.cells.filter((cell) => {\n      const a = emptyCell.position\n      const b = cell.position\n\n      return (a.x === b.x && [b.y + 1, b.y - 1].includes(a.y)) ||\n        (a.y === b.y && [b.x + 1, b.x - 1].includes(a.x))\n    })\n  }\n}\n\nexport default TileScrambler\n","import { React, useState } from 'react'\nimport Cell from './Cell'\nimport CellGenerator from './CellGenerator'\nimport TileMover from './TileMover'\nimport TileScramber from './TileScramber'\n\nconst Grid = ({ size }) => {\n  const [cells, setCells] = useState(new CellGenerator(size).cells)\n\n  const moveTile = (clickedCell) => {\n    const tileMover = new TileMover(cells, clickedCell)\n    tileMover.moveTile()\n    setCells([...tileMover.cells ])\n  }\n\n  const scrambleTiles = () => {\n    const tileScrambler = new TileScramber(cells)\n    tileScrambler.scrambleTiles()\n    setCells([...tileScrambler.cells ])\n  }\n\n  return(\n    <>\n      <div className='grid'>\n        {[...Array(size)].map((_e, i) => {\n          return(\n             <div className='row'>\n              {\n                cells.filter((cell) => (cell.position.x === i)).map((cell) => {\n                  return <Cell data={cell} handleClick={moveTile} size={size}/>\n                })\n              }\n             </div>\n          )\n        })}\n      </div>\n      <button onClick={scrambleTiles}>Scramble Tiles</button>\n    </>\n  )\n}\n\nexport default Grid\n","import Grid from './Grid'\n\nconst App = () => {\n  return(\n    <Grid size={5} />\n  )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}